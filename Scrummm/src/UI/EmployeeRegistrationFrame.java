/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI;

import CommandPatternClasses.Invoker;
import CommandPatternClasses.RemoveEmployeeCommand;
import CommandPatternClasses.EditEmployeeDataCommand;
import CommandPatternClasses.AddEmployeeCommand;
import RegistryManagement.*;
import java.text.SimpleDateFormat;
import java.util.Date;
import EmployeeManagement.*;
import BusManagement.*;
import LogManagement.DutyLog;
import java.awt.Color;
import java.awt.Dimension;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.SwingConstants;
import javax.swing.border.LineBorder;
import javax.swing.border.TitledBorder;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author windows
 */
public class EmployeeRegistrationFrame extends javax.swing.JFrame {
    
    private Employee employee;
    private Invoker invoker = new Invoker();
    private SearchEngine searchEngine = new SearchEngine();
    private boolean hasSelected = false;
    private int selectedRow;
    private DutyLog dutyLog = DutyLog.getInstance();
    private Registry registry = Registry.getInstance();
    private CodeGenerator codeGenerator = CodeGenerator.getInstance();
    private SimpleDateFormat sdf = new SimpleDateFormat("MMMM dd,yyyy");
    private Gender gender = null;
    private BusCompany busCompany = BusCompany.getInstance();
    private DefaultTableModel employeeDataTableModel
            = new DefaultTableModel(new Object[]{"ID", "Name", "Position", "Cellphone #", "Address"}, 0);

    /**
     * Creates new form EmployeeRegistrationFrame
     */
    public EmployeeRegistrationFrame() {
        initComponents();
        setLocationRelativeTo(null);
        setExtendedState(MAXIMIZED_BOTH);

        configureTable(employeeDataTableModel);
        updateTableModel();

        hideUsernamePasswordField();
        employeeDataPanel.setVisible(false);

        genderRadioButtonGroup.add(maleRadioButton);
        genderRadioButtonGroup.add(femaleRadioButton);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        genderRadioButtonGroup = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        employeeDataPanel = new javax.swing.JPanel();
        registerButton = new javax.swing.JButton();
        firstNameLabel = new javax.swing.JLabel();
        firstNameField = new javax.swing.JTextField();
        middleNameLabel = new javax.swing.JLabel();
        lastNameLabel = new javax.swing.JLabel();
        middleNameField = new javax.swing.JTextField();
        lastNameField = new javax.swing.JTextField();
        generLabel = new javax.swing.JLabel();
        maleRadioButton = new javax.swing.JRadioButton();
        femaleRadioButton = new javax.swing.JRadioButton();
        addressLabel = new javax.swing.JLabel();
        addressField = new javax.swing.JTextField();
        cellphoneNumberLabel = new javax.swing.JLabel();
        cellphoneNumberField = new javax.swing.JTextField();
        idLabel = new javax.swing.JLabel();
        idField = new javax.swing.JTextField();
        usernameLabel = new javax.swing.JLabel();
        passwordLabel = new javax.swing.JLabel();
        usernameField = new javax.swing.JTextField();
        dateLabel = new javax.swing.JLabel();
        dateField = new javax.swing.JTextField();
        positionLabel = new javax.swing.JLabel();
        positionField = new javax.swing.JTextField();
        cancelButton = new javax.swing.JButton();
        ageLabel = new javax.swing.JLabel();
        ageField = new javax.swing.JTextField();
        passwordField = new javax.swing.JPasswordField();
        updateButton = new javax.swing.JButton();
        removeButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        employeeDataTable = new javax.swing.JTable();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenuItem9 = new javax.swing.JMenuItem();
        jMenuItem10 = new javax.swing.JMenuItem();
        jMenuItem11 = new javax.swing.JMenuItem();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem7 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true)));

        employeeDataPanel.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        registerButton.setText("Register");
        registerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registerButtonActionPerformed(evt);
            }
        });

        firstNameLabel.setText("First Name:");

        middleNameLabel.setText("Middle Name:");

        lastNameLabel.setText("Last Name:");

        generLabel.setText("Gender:");

        maleRadioButton.setText("Male");
        maleRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                maleRadioButtonActionPerformed(evt);
            }
        });

        femaleRadioButton.setText("Female");
        femaleRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                femaleRadioButtonActionPerformed(evt);
            }
        });

        addressLabel.setText("Address:");

        cellphoneNumberLabel.setText("Cellphone #:");

        idLabel.setText("ID:");

        idField.setEditable(false);

        usernameLabel.setText("Username:");

        passwordLabel.setText("Password:");

        dateLabel.setText("Date:");

        dateField.setEditable(false);
        dateField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dateFieldActionPerformed(evt);
            }
        });

        positionLabel.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        positionLabel.setText("Position:");

        positionField.setEditable(false);
        positionField.setFont(new java.awt.Font("sansserif", 1, 30)); // NOI18N

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        ageLabel.setText("Age:");

        updateButton.setText("Update");
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });

        removeButton.setText("Remove");
        removeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout employeeDataPanelLayout = new javax.swing.GroupLayout(employeeDataPanel);
        employeeDataPanel.setLayout(employeeDataPanelLayout);
        employeeDataPanelLayout.setHorizontalGroup(
            employeeDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(employeeDataPanelLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(employeeDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(employeeDataPanelLayout.createSequentialGroup()
                        .addComponent(updateButton)
                        .addGap(0, 0, 0)
                        .addComponent(removeButton)
                        .addGap(0, 0, 0)
                        .addComponent(registerButton)
                        .addGap(0, 0, 0)
                        .addComponent(cancelButton))
                    .addGroup(employeeDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(addressField, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(employeeDataPanelLayout.createSequentialGroup()
                            .addComponent(middleNameLabel)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(middleNameField))
                        .addGroup(employeeDataPanelLayout.createSequentialGroup()
                            .addComponent(firstNameLabel)
                            .addGap(18, 18, 18)
                            .addComponent(firstNameField))
                        .addGroup(employeeDataPanelLayout.createSequentialGroup()
                            .addGroup(employeeDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(positionLabel)
                                .addComponent(idLabel)
                                .addComponent(dateLabel))
                            .addGroup(employeeDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(employeeDataPanelLayout.createSequentialGroup()
                                    .addGap(33, 33, 33)
                                    .addGroup(employeeDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(dateField, javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(idField)))
                                .addGroup(employeeDataPanelLayout.createSequentialGroup()
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(positionField))))
                        .addGroup(employeeDataPanelLayout.createSequentialGroup()
                            .addComponent(cellphoneNumberLabel)
                            .addGap(18, 18, 18)
                            .addComponent(cellphoneNumberField))
                        .addGroup(employeeDataPanelLayout.createSequentialGroup()
                            .addGroup(employeeDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(lastNameLabel)
                                .addComponent(ageLabel))
                            .addGap(18, 18, 18)
                            .addGroup(employeeDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(employeeDataPanelLayout.createSequentialGroup()
                                    .addComponent(ageField, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(0, 0, Short.MAX_VALUE))
                                .addComponent(lastNameField)))
                        .addGroup(employeeDataPanelLayout.createSequentialGroup()
                            .addGroup(employeeDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(employeeDataPanelLayout.createSequentialGroup()
                                    .addComponent(generLabel)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(maleRadioButton)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(femaleRadioButton))
                                .addComponent(addressLabel)
                                .addGroup(employeeDataPanelLayout.createSequentialGroup()
                                    .addGroup(employeeDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(usernameLabel)
                                        .addComponent(passwordLabel))
                                    .addGap(26, 26, 26)
                                    .addGroup(employeeDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(usernameField)
                                        .addComponent(passwordField, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE))))
                            .addGap(0, 0, Short.MAX_VALUE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        employeeDataPanelLayout.setVerticalGroup(
            employeeDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, employeeDataPanelLayout.createSequentialGroup()
                .addGroup(employeeDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(employeeDataPanelLayout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(positionLabel))
                    .addGroup(employeeDataPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(positionField, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(employeeDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(idLabel)
                    .addComponent(idField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(2, 2, 2)
                .addGroup(employeeDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dateLabel)
                    .addComponent(dateField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(employeeDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(firstNameLabel)
                    .addComponent(firstNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(employeeDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(middleNameLabel)
                    .addComponent(middleNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(employeeDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lastNameLabel)
                    .addComponent(lastNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(employeeDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ageLabel)
                    .addComponent(ageField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13)
                .addGroup(employeeDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(generLabel)
                    .addComponent(maleRadioButton)
                    .addComponent(femaleRadioButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addressLabel)
                .addGap(7, 7, 7)
                .addComponent(addressField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(employeeDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cellphoneNumberLabel)
                    .addComponent(cellphoneNumberField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(employeeDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(usernameLabel)
                    .addComponent(usernameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(employeeDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(passwordLabel)
                    .addComponent(passwordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addGroup(employeeDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(registerButton)
                    .addComponent(cancelButton)
                    .addComponent(updateButton)
                    .addComponent(removeButton))
                .addContainerGap())
        );

        employeeDataTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        employeeDataTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                employeeDataTableMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(employeeDataTable);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(employeeDataPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 189, Short.MAX_VALUE)
                .addGap(12, 12, 12))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(employeeDataPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 27, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jMenu1.setText("File");

        jMenu3.setText("New Employee");

        jMenuItem2.setText("Manager");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem2);

        jMenuItem3.setText("Operator");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem3);

        jMenuItem4.setText("Mechanic");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem4);

        jMenuItem5.setText("Cashier");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem5);

        jMenuItem9.setText("Driver");
        jMenuItem9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem9ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem9);

        jMenuItem10.setText("Conductor");
        jMenuItem10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem10ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem10);

        jMenu1.add(jMenu3);

        jMenuItem11.setText("Edit/Remove Employee");
        jMenuItem11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem11ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem11);

        jMenuItem6.setText("Main Menu");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem6);

        jMenuItem1.setText("Log Out");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem7.setText("Exit");
        jMenuItem7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem7ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem7);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(6, 6, 6))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void configureTable(DefaultTableModel model) {
        employeeDataTable.setModel(model);
        employeeDataTable.getTableHeader().setReorderingAllowed(false);
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment(SwingConstants.CENTER);
        employeeDataTable.getTableHeader().setDefaultRenderer(centerRenderer);
        employeeDataTable.setRowSelectionAllowed(true);
        employeeDataTable.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        employeeDataTable.setEnabled(true);
        employeeDataTable.setSelectionBackground(java.awt.Color.GRAY);
        employeeDataTable.getColumn("ID").setCellRenderer(centerRenderer);
        employeeDataTable.getColumn("ID").setMaxWidth(150);
        employeeDataTable.getColumn("ID").setMinWidth(90);
        employeeDataTable.getColumn("ID").setPreferredWidth(100);
        employeeDataTable.getColumn("Name").setCellRenderer(centerRenderer);
        employeeDataTable.getColumn("Name").setMaxWidth(300);
        employeeDataTable.getColumn("Name").setMinWidth(170);
        employeeDataTable.getColumn("Name").setPreferredWidth(200);
        employeeDataTable.getColumn("Address").setCellRenderer(centerRenderer);
        employeeDataTable.getColumn("Address").setMaxWidth(1000);
        employeeDataTable.getColumn("Address").setMinWidth(150);
        employeeDataTable.getColumn("Address").setPreferredWidth(300);
        if (model == employeeDataTableModel) {
            employeeDataTable.getColumn("Position").setCellRenderer(centerRenderer);
            employeeDataTable.getColumn("Position").setMaxWidth(150);
            employeeDataTable.getColumn("Position").setMinWidth(75);
            employeeDataTable.getColumn("Position").setPreferredWidth(100);
            employeeDataTable.getColumn("Cellphone #").setCellRenderer(centerRenderer);
            employeeDataTable.getColumn("Cellphone #").setMaxWidth(150);
            employeeDataTable.getColumn("Cellphone #").setMinWidth(95);
            employeeDataTable.getColumn("Cellphone #").setPreferredWidth(120);
        } else {
            employeeDataTable.getColumn("Time In").setCellRenderer(centerRenderer);
            employeeDataTable.getColumn("Time Out").setCellRenderer(centerRenderer);
        }
        for (int c = 0; c < employeeDataTable.getColumnCount(); c++) {
            Class<?> col_class = employeeDataTable.getColumnClass(c);
            employeeDataTable.setDefaultEditor(col_class, null);        // remove editor
        }
        employeeDataTable.getTableHeader().setResizingAllowed(false);
        employeeDataTable.setShowGrid(true);

    }

    private void updateTableModel() {
        while (employeeDataTable.getRowCount() > 0) {
            employeeDataTableModel.removeRow(0);
        }
        for (Employee employee : busCompany.getEmployees()) {
            String name = employee.getLastName() + ", " + employee.getFirstName() + " " + employee.getMiddleName();
            String position = "";
            if (employee instanceof Manager) {
                position = "Manager";
            } else if (employee instanceof Operator) {
                position = "Operator";
            } else if (employee instanceof Cashier) {
                position = "Cashier";
            } else if (employee instanceof Mechanic) {
                position = "Mechanic";
            } else if (employee instanceof Conductor) {
                position = "Conductor";
            } else if (employee instanceof Driver) {
                position = "Driver";
            }
            employeeDataTableModel.addRow(
                    new Object[]{employee.getId(), name, position, employee.getCellphoneNumber(), employee.getAddress()});
        }
    }

    private void clearFields() {
        positionField.setText("");
        idField.setText("");
        firstNameField.setText("");
        middleNameField.setText("");
        lastNameField.setText("");
        ageField.setText("");
        addressField.setText("");
        genderRadioButtonGroup.clearSelection();
        cellphoneNumberField.setText("");
        usernameField.setText("");
        passwordField.setText("");
    }

    private void showUsernamePasswordField() {
        usernameLabel.setVisible(true);
        usernameField.setVisible(true);
        passwordLabel.setVisible(true);
        passwordField.setVisible(true);
    }

    private void hideUsernamePasswordField() {
        usernameLabel.setVisible(false);
        usernameField.setVisible(false);
        passwordLabel.setVisible(false);
        passwordField.setVisible(false);
    }

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        reset();
        employeeDataPanel.setVisible(true);
        positionField.setText("Mechanic");
        idField.setText(codeGenerator.generateId());
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void dateFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dateFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dateFieldActionPerformed

    private void registerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registerButtonActionPerformed
        int age = 0;

        try {
            age = Integer.parseInt(ageField.getText());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Invalid input on age field!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        if (age < 18) {
            JOptionPane.showMessageDialog(null, "Employee is underage or invalid input! \n "
                    + "Must be 18 years old and above!", "Invalid", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        
        if (cellphoneNumberVerification()) {
            return;
        }
        
        fieldsVerification();

        String address = addressField.getText();
        String firstName = firstNameField.getText();
        String middleName = middleNameField.getText();
        String lastName = lastNameField.getText();
        String id = idField.getText();
        String position = positionField.getText();
        String username = usernameField.getText();
        String password = passwordField.getText();
        String cellphoneNumber = cellphoneNumberField.getText();

        if (gender != null) {
            if (position.equals("Manager") || position.equals("Operator") || position.equals("Cashier")) {
                if (password.isEmpty() || password.length() < 4) {
                    JOptionPane.showMessageDialog(null, "Password at least 4 in length", "Invalid", JOptionPane.ERROR_MESSAGE);
                    return;
                }
                if (position.equals("Manager")) {
                    if (username.isEmpty() || username.length() < 4) {
                        JOptionPane.showMessageDialog(null, "Username at least 4 in length", "Invalid", JOptionPane.ERROR_MESSAGE);
                        return;
                    }
                }
            }
            if (position.equals("Manager")) {
                invoker.setCommand(new AddEmployeeCommand(new Manager(username, password, age, gender, address, cellphoneNumber,
                        firstName, lastName, middleName, id)));
                invoker.executeCommand();
            } else if (position.equals("Operator")) {
                invoker.setCommand(new AddEmployeeCommand(new Operator(password, age, gender, address, cellphoneNumber, firstName,
                        lastName, middleName, id)));
                invoker.executeCommand();
            } else if (position.equals("Mechanic")) {
                invoker.setCommand(new AddEmployeeCommand(new Mechanic(age, gender, address, cellphoneNumber, firstName,
                        lastName, middleName, id)));
                invoker.executeCommand();
            } else if (position.equals("Cashier")) {
                invoker.setCommand(new AddEmployeeCommand(new Cashier(password, age, gender, address, cellphoneNumber,
                        firstName, lastName, middleName, id)));
                invoker.executeCommand();
            } else if (position.equals("Driver")) {
                invoker.setCommand(new AddEmployeeCommand(new Driver(age, gender, address, cellphoneNumber, firstName,
                        lastName, middleName, id)));
                invoker.executeCommand();
            } else if (position.equals("Conductor")) {
                invoker.setCommand(new AddEmployeeCommand(new Conductor(age, gender, address, cellphoneNumber, firstName,
                        lastName, middleName, id)));
                invoker.executeCommand();
            }

            updateTableModel();
            employeeDataPanel.setVisible(false);
        }
    }//GEN-LAST:event_registerButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        employeeDataPanel.setVisible(false);
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void reset() {
        clearFields();
        positionField.setPreferredSize(new Dimension(165, 46));
        configureTable(employeeDataTableModel);
        hideUsernamePasswordField();
        LineBorder lineBorder = new LineBorder(Color.BLACK, 1, true);
        employeeDataPanel.setBorder(lineBorder);
        maleRadioButton.setEnabled(true);
        femaleRadioButton.setEnabled(true);
        ageField.setEnabled(true);
        dateField.setText(sdf.format(new Date()));
        employeeDataTable.clearSelection();
        hasSelected = false;
        employee = null;
        registerButton.show();
        updateButton.hide();
        removeButton.hide();
    }

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        reset();
        employeeDataPanel.setVisible(true);
        showUsernamePasswordField();
        positionField.setText("Manager");
        idField.setText(codeGenerator.generateId());
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        reset();
        employeeDataPanel.setVisible(true);
        showUsernamePasswordField();
        positionField.setText("Operator");
        idField.setText(codeGenerator.generateId());
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        reset();
        employeeDataPanel.setVisible(true);
        passwordLabel.setVisible(true);
        passwordField.setVisible(true);
        positionField.setText("Cashier");
        idField.setText(codeGenerator.generateId());
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void jMenuItem9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem9ActionPerformed
        reset();
        employeeDataPanel.setVisible(true);
        positionField.setText("Driver");
        idField.setText(codeGenerator.generateId());
    }//GEN-LAST:event_jMenuItem9ActionPerformed

    private void maleRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_maleRadioButtonActionPerformed
        gender = Gender.MALE;
    }//GEN-LAST:event_maleRadioButtonActionPerformed

    private void femaleRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_femaleRadioButtonActionPerformed
        gender = Gender.FEMALE;
    }//GEN-LAST:event_femaleRadioButtonActionPerformed

    private void jMenuItem10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem10ActionPerformed
        reset();
        employeeDataPanel.setVisible(true);
        positionField.setText("Conductor");
        idField.setText(codeGenerator.generateId());
    }//GEN-LAST:event_jMenuItem10ActionPerformed

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
        ManagerMainMenu managerMainMenu = new ManagerMainMenu();
        this.hide();
        managerMainMenu.show();
    }//GEN-LAST:event_jMenuItem6ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        LoginFrame loginFrame = new LoginFrame();
        dutyLog = DutyLog.getInstance();
        dutyLog.setTimeOut(new Date());
        registry.addDutyLog(dutyLog);
        dutyLog.resetInstance();
        this.hide();
        loginFrame.show();
    }//GEN-LAST:event_jMenuItem1ActionPerformed


    private void jMenuItem7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem7ActionPerformed
        dutyLog.setTimeOut(new Date());
        registry.addDutyLog(dutyLog);
        dutyLog.resetInstance();
        this.dispose();
    }//GEN-LAST:event_jMenuItem7ActionPerformed

    private void employeeDataTableMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_employeeDataTableMousePressed

        if (hasSelected && selectedRow == employeeDataTable.getSelectedRow()) {
            reset();
            dateField.setText("");
            employeeDataTable.clearSelection();
            employee = null;
            hasSelected = false;
            return;
        }

        selectedRow = employeeDataTable.getSelectedRow();
        hasSelected = true;

        if (selectedRow >= 0) {
            String id = (String) employeeDataTable.getValueAt(selectedRow, 0);
            employee = searchEngine.searchEmployeeById(id);
            String name = employee.getLastName() + ", " + employee.getFirstName() + " " + employee.getMiddleName();
            Date dateRegistered = searchEngine.searchEmployeeDateRegistered(name);
            if (employee instanceof Manager) {
                positionField.setText("Manager");
            } else if (employee instanceof Cashier) {
                positionField.setText("Cashier");
            } else if (employee instanceof Driver) {
                positionField.setText("Driver");
            } else if (employee instanceof Conductor) {
                positionField.setText("Conductor");
            } else if (employee instanceof Mechanic) {
                positionField.setText("Mechanic");
            } else if (employee instanceof Operator) {
                positionField.setText("Operator");
            }

            idField.setText(id);
            if (dateRegistered != null) {
                dateField.setText(sdf.format(dateRegistered));
            }
            firstNameField.setText(employee.getFirstName());
            middleNameField.setText(employee.getMiddleName());
            lastNameField.setText(employee.getLastName());
            ageField.setText(Integer.toString(employee.getAge()));
            if (employee.getGender() == Gender.MALE) {
                maleRadioButton.setSelected(true);
            } else {
                femaleRadioButton.setSelected(true);
            }
            ageField.setEnabled(false);
            maleRadioButton.setEnabled(false);
            femaleRadioButton.setEnabled(false);
            addressField.setText(employee.getAddress());
            cellphoneNumberField.setText(employee.getCellphoneNumber());
            updateButton.setEnabled(true);
        }
    }//GEN-LAST:event_employeeDataTableMousePressed

    private void fieldsVerification() {
        if (firstNameField.getText().isEmpty() || middleNameField.getText().isEmpty()
                || lastNameField.getText().isEmpty() || addressField.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Fill all the fields to continue!", "Invalid!", JOptionPane.ERROR_MESSAGE);
            return;
        }
    }

    private boolean cellphoneNumberVerification() {
        try {
            double cellphoneNumber = Double.parseDouble(cellphoneNumberField.getText());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Invalid input on cellphone # field!", "Error", JOptionPane.ERROR_MESSAGE);
            return true;
        }

        if (cellphoneNumberField.getText().length() < 11) {
            JOptionPane.showMessageDialog(null, "Invalid length of cellphone number! "
                    + "\n Must be 11 digits!", "Invalid", JOptionPane.ERROR_MESSAGE);
            return true;
        } 
        return false;
    }


    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
        if (cellphoneNumberVerification()) {
            return;
        }
        fieldsVerification();
        String firstName = firstNameField.getText();
        String middleName = middleNameField.getText();
        String lastName = lastNameField.getText();
        String address = addressField.getText();
        String cellphoneNumber = cellphoneNumberField.getText();

        employee.setFirstName(firstName);
        employee.setMiddleName(middleName);
        employee.setLastName(lastName);
        employee.setAddress(address);
        employee.setCellphoneNumber(cellphoneNumber);

        /*       if (employee instanceof Manager) {
         employee=(Manager)employee;
         } else if (employee instanceof Operator) {
         employee=(Operator)employee;
         } else if (employee instanceof Cashier) {
         employee=(Cashier)employee;
         } else if (employee instanceof Mechanic) {
         employee=(Mechanic)employee;
         } else if (employee instanceof Conductor) {
         employee=(Conductor)employee;
         } else if (employee instanceof Driver) {
         employee=(Driver)employee;
         }*/
        invoker.setCommand(new EditEmployeeDataCommand(employee));
        invoker.executeCommand();
        updateTableModel();
    }//GEN-LAST:event_updateButtonActionPerformed

    private void jMenuItem11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem11ActionPerformed
        configureTable(employeeDataTableModel);
        employeeDataPanel.setVisible(true);
        updateButton.setEnabled(false);
        dateField.setText("");
        positionField.setText("");
        idField.setText("");
        clearFields();
        TitledBorder borderFactory = new TitledBorder(new LineBorder(Color.BLACK, 1, true),
                "Select Row on Table", TitledBorder.CENTER, TitledBorder.BELOW_TOP);
        employeeDataPanel.setBorder(borderFactory);
        hideUsernamePasswordField();
        updateButton.show();
        removeButton.show();
        registerButton.hide();
    }//GEN-LAST:event_jMenuItem11ActionPerformed

    private void removeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeButtonActionPerformed
        invoker.setCommand(new RemoveEmployeeCommand(employee));
        invoker.executeCommand();
        updateTableModel();
        reset();
        employeeDataPanel.setVisible(false);
    }//GEN-LAST:event_removeButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EmployeeRegistrationFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EmployeeRegistrationFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EmployeeRegistrationFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EmployeeRegistrationFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EmployeeRegistrationFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField addressField;
    private javax.swing.JLabel addressLabel;
    private javax.swing.JTextField ageField;
    private javax.swing.JLabel ageLabel;
    private javax.swing.JButton cancelButton;
    private javax.swing.JTextField cellphoneNumberField;
    private javax.swing.JLabel cellphoneNumberLabel;
    private javax.swing.JTextField dateField;
    private javax.swing.JLabel dateLabel;
    private javax.swing.JPanel employeeDataPanel;
    private javax.swing.JTable employeeDataTable;
    private javax.swing.JRadioButton femaleRadioButton;
    private javax.swing.JTextField firstNameField;
    private javax.swing.JLabel firstNameLabel;
    private javax.swing.ButtonGroup genderRadioButtonGroup;
    private javax.swing.JLabel generLabel;
    private javax.swing.JTextField idField;
    private javax.swing.JLabel idLabel;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem10;
    private javax.swing.JMenuItem jMenuItem11;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JMenuItem jMenuItem9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField lastNameField;
    private javax.swing.JLabel lastNameLabel;
    private javax.swing.JRadioButton maleRadioButton;
    private javax.swing.JTextField middleNameField;
    private javax.swing.JLabel middleNameLabel;
    private javax.swing.JPasswordField passwordField;
    private javax.swing.JLabel passwordLabel;
    private javax.swing.JTextField positionField;
    private javax.swing.JLabel positionLabel;
    private javax.swing.JButton registerButton;
    private javax.swing.JButton removeButton;
    private javax.swing.JButton updateButton;
    private javax.swing.JTextField usernameField;
    private javax.swing.JLabel usernameLabel;
    // End of variables declaration//GEN-END:variables
}
