/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package UI;

import BookingManagement.Trip;
import BookingManagement.TripStatus;
import BusManagement.Bus;
import BusManagement.BusCompany;
import RegistryManagement.CodeGenerator;
import RegistryManagement.Registry;
import RegistryManagement.SearchEngine;
import java.awt.EventQueue;
import java.awt.FlowLayout;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Collections;
import java.util.Date;
import java.util.List;
import java.util.Vector;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import net.sourceforge.jcalendarbutton.JCalendarButton;
import net.sourceforge.jcalendarbutton.JTimeButton;

/**
 *
 * @author Sian Paul Lasaga
 */
public class FixedAddTripFrame extends javax.swing.JFrame {
    
    private Date today = new Date();
    private BusCompany busCo = BusCompany.getInstance();
    private Trip trip = new Trip();
    private List<Trip> tripList;
    private SearchEngine search = new SearchEngine();
    private Registry reg = Registry.getInstance();
    private static CodeGenerator gen = CodeGenerator.getInstance();
    private Vector<String> v = new Vector<>();
    private Vector<String> v2 = new Vector<>();
    private boolean hide_flag = false;
    private JTextField locationFromText;
    private JTextField locationToText;
    private JTextField venueText;
    private Vector<String> busNumbers=new Vector<String>();
    private FlowLayout flMain = new FlowLayout();
    private SimpleDateFormat df = new SimpleDateFormat("MM/dd/yyyy");
    private SimpleDateFormat df1 = new SimpleDateFormat("hh:mm a");
    private JCalendarButton jCalendar = new JCalendarButton();
    private JTimeButton jTime = new JTimeButton();
    private String[] months = { "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec",};
    private String[] daysOfWeek = { "Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat",};
    private List<Date> schedList = new ArrayList<>();

    /**
     * Creates new form FixedAddTripFrame
     */
    public FixedAddTripFrame() {
        initComponents();
        for (int i = 0; i < 8; i++) {
            int year = today.getYear() - 100 + 2000 + i;
            yearComboBox.addItem(year);
        }
        
        for (String month : months) {
            fromMonthsComboBox.addItem(month);
            toMonthsComboBox.addItem(month);
        }
        
        for (String day : daysOfWeek) {
            dayComboBox.addItem(day);
        }
        
        for (Bus bus : busCo.getBusses()) {
            busNumbers.add(bus.getBusNumber());
        }
        
        busNoCBox.setModel(new DefaultComboBoxModel(busNumbers));
        busNoCBox.setModel(new DefaultComboBoxModel());
        for (Bus bus : busCo.getBusses()) {
            busNoCBox.addItem(bus.getBusNumber());
        }
        locationFromText = (JTextField) locationFromComboBox.getEditor().getEditorComponent();
        locationToText = (JTextField) locationToComboBox.getEditor().getEditorComponent();
        venueText = (JTextField) tripVenueComboBox.getEditor().getEditorComponent();
        timePanel.setLayout(flMain);
        timePanel.add(jTime);
        jTime.addPropertyChangeListener(new PropertyChangeListener(){
            @Override
            public void propertyChange(PropertyChangeEvent evt){
                if(evt.getNewValue() instanceof Date){
                    timeTextField.setText(df1.format(evt.getNewValue()));
                }
            }
        });
        locationFromSuggestionBox();
        locationToSuggestionBox();
        venueSuggestionBox();
        for (Trip trip1 : reg.getTrips()) {
            String loc = trip1.getTripFrom();
            String loc2 = trip1.getTripTo();
            String ven = trip1.getVenue();
            v.add(loc);
            v.add(loc2);
            v2.add(ven);
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        priceText = new javax.swing.JTextField();
        busNoCBox = new javax.swing.JComboBox();
        timeTextField = new javax.swing.JFormattedTextField();
        jLabel9 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        locationFromComboBox = new javax.swing.JComboBox();
        locationToComboBox = new javax.swing.JComboBox();
        tripVenueComboBox = new javax.swing.JComboBox();
        timePanel = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        dayComboBox = new javax.swing.JComboBox();
        fromMonthsComboBox = new javax.swing.JComboBox();
        toMonthsComboBox = new javax.swing.JComboBox();
        jLabel12 = new javax.swing.JLabel();
        yearComboBox = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        AddTripButton = new javax.swing.JButton();
        backButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Trip Information"));

        jLabel2.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel2.setText("Bus No.:");

        jLabel6.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel6.setText("Time:");

        jLabel3.setText("Reference Numbers:");

        jLabel4.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel4.setText("Price:");

        busNoCBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-Select-" }));
        busNoCBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                busNoCBoxActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel9.setText("Venue:");

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Route"));

        jLabel5.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel5.setText("From:");

        jLabel10.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel10.setText("To:");

        locationFromComboBox.setEditable(true);

        locationToComboBox.setEditable(true);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(locationFromComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(locationToComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(14, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel10)
                    .addComponent(locationFromComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(locationToComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        tripVenueComboBox.setEditable(true);

        javax.swing.GroupLayout timePanelLayout = new javax.swing.GroupLayout(timePanel);
        timePanel.setLayout(timePanelLayout);
        timePanelLayout.setHorizontalGroup(
            timePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 29, Short.MAX_VALUE)
        );
        timePanelLayout.setVerticalGroup(
            timePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 26, Short.MAX_VALUE)
        );

        jLabel13.setText("Automatically generated");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(54, 54, 54)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(priceText, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(30, 30, 30))
                                    .addComponent(busNoCBox, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jLabel2)
                            .addComponent(jLabel4))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(timeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(timePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(tripVenueComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(30, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel13)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(busNoCBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(priceText, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jLabel13))
                        .addGap(12, 12, 12)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel6)
                                .addComponent(timeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(timePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(tripVenueComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Schedule Conditions"));

        jLabel7.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel7.setText("Every");

        jLabel8.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel8.setText("from");

        jLabel11.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel11.setText("to");

        jLabel12.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel12.setText("of");

        jLabel1.setFont(new java.awt.Font("Dialog", 0, 8)); // NOI18N
        jLabel1.setText("(1st week)");

        jLabel14.setFont(new java.awt.Font("Dialog", 0, 8)); // NOI18N
        jLabel14.setText("(last week)");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7)
                .addGap(2, 2, 2)
                .addComponent(dayComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(fromMonthsComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel11))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jLabel1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(toMonthsComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(yearComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jLabel14)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8)
                    .addComponent(jLabel11)
                    .addComponent(dayComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fromMonthsComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(toMonthsComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12)
                    .addComponent(yearComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel14))
                .addContainerGap())
        );

        AddTripButton.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        AddTripButton.setText("Add Trip");
        AddTripButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddTripButtonActionPerformed(evt);
            }
        });

        backButton.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        backButton.setText("Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, 374, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(AddTripButton, javax.swing.GroupLayout.PREFERRED_SIZE, 374, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(17, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(AddTripButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(17, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void locationFromSuggestionBox(){
        locationFromText.addKeyListener(new KeyAdapter() {
            public void keyTyped(KeyEvent e){
                EventQueue.invokeLater(new Runnable(){
                    @Override
                    public void run() {
                        String text = locationFromText.getText();
                        if(text.length() == 0){
                            locationFromComboBox.hidePopup();
                            locationFromComboBox.setModel(new DefaultComboBoxModel(v));
                            locationFromComboBox.setSelectedIndex(-1);
                            locationFromText.setText("");
                        } else{
                            DefaultComboBoxModel m = getSuggestedModel(v, text);
                            if(m.getSize() == 0 || hide_flag){
                                locationFromComboBox.hidePopup();
                                hide_flag = false;
                            } else{
                                if(m.getSize()==1){
                                    tripList = search.searchTripFromAndTo(m.getSelectedItem().toString());
                                }
                                locationFromComboBox.setModel(m);
                                locationFromComboBox.setSelectedIndex(-1);
                                locationFromText.setText(text);
                                locationFromComboBox.showPopup();
                            }
                        }
                    }
                    
                });
            }
            
            public void keyPressed(KeyEvent e){
                String text = locationFromText.getText();
                DefaultComboBoxModel m = getSuggestedModel(v, text);
                int code = e.getKeyCode();
                if (code == KeyEvent.VK_ENTER) {
                    if (!v.contains(text)) {
                        Collections.sort(v);
                        tripList = search.searchTripFromAndTo(m.getSelectedItem().toString());
                        locationFromComboBox.setModel(getSuggestedModel(v, text));
                        locationFromComboBox.setSelectedIndex(-1);
                        locationFromText.setText(text);
                    }
                    hide_flag = true;
                }else if(code == KeyEvent.VK_ESCAPE){
                    hide_flag = true;
                }else if(code == KeyEvent.VK_RIGHT){
                    for (int i = 0; i < v.size(); i++) {
                        String str = v.elementAt(i);
                        if(str.startsWith(text)){
                            locationFromComboBox.setSelectedIndex(-1);
                            locationFromText.setText(str);
                            return;
                        }
                    }
                }
            }
        });
    }
    
    public void locationToSuggestionBox(){
        locationToText.addKeyListener(new KeyAdapter() {
            public void keyTyped(KeyEvent e){
                EventQueue.invokeLater(new Runnable(){
                    @Override
                    public void run() {
                        String text = locationToText.getText();
                        if(text.length() == 0){
                            locationToComboBox.hidePopup();
                            locationToComboBox.setModel(new DefaultComboBoxModel(v));
                            locationToComboBox.setSelectedIndex(-1);
                            locationToText.setText("");
                        } else{
                            DefaultComboBoxModel m = getSuggestedModel(v, text);
                            if(m.getSize() == 0 || hide_flag){
                                locationToComboBox.hidePopup();
                                hide_flag = false;
                            } else{
                                if(m.getSize()==1){
                                    tripList = search.searchTripFromAndTo(m.getSelectedItem().toString());
                                }
                                locationToComboBox.setModel(m);
                                locationToComboBox.setSelectedIndex(-1);
                                locationToText.setText(text);
                                locationToComboBox.showPopup();
                            }
                        }
                    }
                    
                });
            }
            
            public void keyPressed(KeyEvent e){
                String text = locationToText.getText();
                DefaultComboBoxModel m = getSuggestedModel(v, text);
                int code = e.getKeyCode();
                if (code == KeyEvent.VK_ENTER) {
                    if (!v.contains(text)) {
                        Collections.sort(v);
                        tripList = search.searchTripFromAndTo(m.getSelectedItem().toString());
                        locationToComboBox.setModel(getSuggestedModel(v, text));
                        locationToComboBox.setSelectedIndex(-1);
                        locationToText.setText(text);
                    }
                    hide_flag = true;
                }else if(code == KeyEvent.VK_ESCAPE){
                    hide_flag = true;
                }else if(code == KeyEvent.VK_RIGHT){
                    for (int i = 0; i < v.size(); i++) {
                        String str = v.elementAt(i);
                        if(str.startsWith(text)){
                            locationToComboBox.setSelectedIndex(-1);
                            locationToText.setText(str);
                            return;
                        }
                    }
                }
            }
        });
    }
    
    public void venueSuggestionBox(){
        venueText.addKeyListener(new KeyAdapter() {
            public void keyTyped(KeyEvent e){
                EventQueue.invokeLater(new Runnable(){
                    @Override
                    public void run() {
                        String text = venueText.getText();
                        if(text.length() == 0){
                            tripVenueComboBox.hidePopup();
                            tripVenueComboBox.setModel(new DefaultComboBoxModel(v2));
                            tripVenueComboBox.setSelectedIndex(-1);
                            venueText.setText("");
                        } else{
                            DefaultComboBoxModel m = getSuggestedModel(v2, text);
                            if(m.getSize() == 0 || hide_flag){
                                locationToComboBox.hidePopup();
                                hide_flag = false;
                            } else{
                                if(m.getSize()==1){
                                    tripList = search.searchTripFromAndTo(m.getSelectedItem().toString());
                                }
                                tripVenueComboBox.setModel(m);
                                tripVenueComboBox.setSelectedIndex(-1);
                                venueText.setText(text);
                                tripVenueComboBox.showPopup();
                            }
                        }
                    }
                    
                });
            }
            
            public void keyPressed(KeyEvent e){
                String text = venueText.getText();
                DefaultComboBoxModel m = getSuggestedModel(v2, text);
                int code = e.getKeyCode();
                if (code == KeyEvent.VK_ENTER) {
                    if (!v2.contains(text)) {
                        Collections.sort(v2);
                        tripList = search.searchTripFromAndTo(m.getSelectedItem().toString());
                        tripVenueComboBox.setModel(getSuggestedModel(v2, text));
                        tripVenueComboBox.setSelectedIndex(-1);
                        venueText.setText(text);
                    }
                    hide_flag = true;
                }else if(code == KeyEvent.VK_ESCAPE){
                    hide_flag = true;
                }else if(code == KeyEvent.VK_RIGHT){
                    for (int i = 0; i < v2.size(); i++) {
                        String str = v2.elementAt(i);
                        if(str.startsWith(text)){
                            tripVenueComboBox.setSelectedIndex(-1);
                            venueText.setText(str);
                            return;
                        }
                    }
                }
            }
        });
    }
    
    private static DefaultComboBoxModel getSuggestedModel(java.util.List<String> list, String text){
        DefaultComboBoxModel m = new DefaultComboBoxModel();
        for (String s : list) {
            s = s.toUpperCase();
            if (s.startsWith(text.toUpperCase())) {
                m.addElement(s);
            }
        }
        return m;
    }

    public static Date getDate(int day, int weekNo, int month, int year) {
        Calendar cal = Calendar.getInstance();
        cal.set(Calendar.DATE,1);
        cal.set(Calendar.YEAR, year);
        cal.set(Calendar.MONTH, month);
        for (int i = 0; i < 31; i++) {
            if (cal.get(Calendar.WEEK_OF_MONTH) == weekNo
                    && cal.get(Calendar.DAY_OF_WEEK) == day) {
                return cal.getTime();
            }
            cal.add(Calendar.DATE,1);
        }
        return null;
    }

    
    private void AddTripButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddTripButtonActionPerformed
        // TODO add your handling code here:
          if(locationFromText.getText().isEmpty() || locationToText.getText().isEmpty() || busNoCBox.getSelectedItem().toString().isEmpty()
            || timeTextField.getText().isEmpty() || priceText.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "Please fill all the data.", "Not complete!", JOptionPane.ERROR_MESSAGE);
            
        } else if(fromMonthsComboBox.getSelectedIndex() > toMonthsComboBox.getSelectedIndex()){
            JOptionPane.showMessageDialog(null, "Please select an appropriate condition.", "Wrong condition!", JOptionPane.ERROR_MESSAGE);
        }


        else {
            if(fromMonthsComboBox.getSelectedIndex() == toMonthsComboBox.getSelectedIndex()){
                for (int i = 1; i < 5; i++) {
                schedList.add(getDate(dayComboBox.getSelectedIndex()+1, i, fromMonthsComboBox.getSelectedIndex(), Integer.parseInt(yearComboBox.getSelectedItem().toString())));
                }
            }
            else if(fromMonthsComboBox.getSelectedIndex() < toMonthsComboBox.getSelectedIndex()){
            for (int month = fromMonthsComboBox.getSelectedIndex(); month <= toMonthsComboBox.getSelectedIndex(); month++) {
                for (int i = 1; i < 5; i++) {
                    schedList.add(getDate(dayComboBox.getSelectedIndex()+1, i, month, Integer.parseInt(yearComboBox.getSelectedItem().toString())));
                    }
                }
            }
            String locationFrom = locationFromText.getText();
            String locationTo = locationToText.getText();
            String time = timeTextField.getText();
            String busNo = busNoCBox.getSelectedItem().toString();
            Bus bus = search.searchBusByBusNo(busNo);
            String venue = venueText.getText();
            double price = Double.parseDouble(priceText.getText());
            for (Date date1 : schedList) {
                if(date1!=null){
                    Date date = new Date(date1.getMonth()+1+"/"+date1.getDate()+"/"+Integer.parseInt(yearComboBox.getSelectedItem().toString())+"  "+time);
                    String refNumber = gen.generateReferenceNumber();
                    trip = new Trip(TripStatus.READY, price, locationFrom, locationTo, bus, date, refNumber, venue);
                    reg.addTrip(trip);
                }
            }
            JOptionPane.showMessageDialog(null, "The trips has been added", "Finished", JOptionPane.INFORMATION_MESSAGE);
            this.hide();
            new AddTripFrame().show();
        }
    }//GEN-LAST:event_AddTripButtonActionPerformed

    private void busNoCBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_busNoCBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_busNoCBoxActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        this.hide();
        ManagerMainMenu mainMenu=new ManagerMainMenu();
        mainMenu.show();
    }//GEN-LAST:event_backButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FixedAddTripFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FixedAddTripFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FixedAddTripFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FixedAddTripFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FixedAddTripFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddTripButton;
    private javax.swing.JButton backButton;
    private javax.swing.JComboBox busNoCBox;
    private javax.swing.JComboBox dayComboBox;
    private javax.swing.JComboBox fromMonthsComboBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JComboBox locationFromComboBox;
    private javax.swing.JComboBox locationToComboBox;
    private javax.swing.JTextField priceText;
    private javax.swing.JPanel timePanel;
    private javax.swing.JFormattedTextField timeTextField;
    private javax.swing.JComboBox toMonthsComboBox;
    private javax.swing.JComboBox tripVenueComboBox;
    private javax.swing.JComboBox yearComboBox;
    // End of variables declaration//GEN-END:variables
}
