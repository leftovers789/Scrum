/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package UI;

import BookingManagement.Trip;
import BusCrewNotificationSystem.Sms;
import BusCrewNotificationSystem.Template;
import BusManagement.Bus;
import EmployeeManagement.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Sian Paul Lasaga
 */
public class SmsChangeInScheduleFrame extends javax.swing.JFrame {

    private Template template = new Template();
    private Sms sms = new Sms();
    /**
     * Creates new form SmsChangeInScheduleFrame
     */
    public SmsChangeInScheduleFrame() {
        initComponents();
        driverContactNoTextField.disable();
        conductorContactNoTextField.disable();
        messageTextArea.disable();
        messageTextArea.setLineWrap(true);
        try {
            sms.startService();
        } catch (Exception ex) {
            Logger.getLogger(SmsChangeInScheduleFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        messageTextArea = new javax.swing.JTextArea();
        conductorContactNoTextField = new javax.swing.JTextField();
        driverContactNoTextField = new javax.swing.JTextField();
        driverNameTextLabel = new javax.swing.JLabel();
        conductorNameTextLabel = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        sendButton = new javax.swing.JButton();
        backButton = new javax.swing.JButton();
        notificationTypeTextLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        messageTextArea.setColumns(20);
        messageTextArea.setRows(5);
        messageTextArea.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                messageTextAreaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(messageTextArea);

        conductorContactNoTextField.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        conductorContactNoTextField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                conductorContactNoTextFieldMouseClicked(evt);
            }
        });

        driverContactNoTextField.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        driverContactNoTextField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                driverContactNoTextFieldMouseClicked(evt);
            }
        });

        driverNameTextLabel.setText("Driver's name here");

        conductorNameTextLabel.setText("Conductor's name here");

        jLabel1.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel1.setText("To:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(22, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(conductorContactNoTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(conductorNameTextLabel))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(driverContactNoTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(driverNameTextLabel)))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(driverContactNoTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(driverNameTextLabel))
                .addGap(4, 4, 4)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(conductorContactNoTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(conductorNameTextLabel))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        sendButton.setText("Send");
        sendButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendButtonActionPerformed(evt);
            }
        });

        backButton.setText("Cancel");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        notificationTypeTextLabel.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        notificationTypeTextLabel.setText("SMS Notification");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(backButton)
                        .addGap(18, 18, 18)
                        .addComponent(sendButton)
                        .addGap(41, 41, 41))))
            .addGroup(layout.createSequentialGroup()
                .addGap(102, 102, 102)
                .addComponent(notificationTypeTextLabel)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(notificationTypeTextLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sendButton)
                    .addComponent(backButton))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        // TODO add your handling code here:
        this.hide();
    }//GEN-LAST:event_backButtonActionPerformed

    private void sendButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendButtonActionPerformed
        // TODO add your handling code here:
        String driverContactNo = driverContactNoTextField.getText();
        String conductorContactNo = conductorContactNoTextField.getText();
        if(driverContactNo.isEmpty() || conductorContactNo.isEmpty() || driverContactNo.length() == 11 || conductorContactNo.length() == 11){
            try {
                sms.sendSms(driverContactNo, messageTextArea.getText());        
                sms.sendSms(conductorContactNo, messageTextArea.getText());
                sms.stopService();
                this.hide();
            } catch (Exception ex) {
                Logger.getLogger(SmsChangeInScheduleFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        else{
            JOptionPane.showMessageDialog(null, "Invalid contact number", "Cannot send", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_sendButtonActionPerformed

    private void driverContactNoTextFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_driverContactNoTextFieldMouseClicked
        // TODO add your handling code here:
        driverContactNoTextField.enable();
    }//GEN-LAST:event_driverContactNoTextFieldMouseClicked

    private void conductorContactNoTextFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_conductorContactNoTextFieldMouseClicked
        // TODO add your handling code here:
        conductorContactNoTextField.enable();
    }//GEN-LAST:event_conductorContactNoTextFieldMouseClicked

    private void messageTextAreaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_messageTextAreaMouseClicked
        // TODO add your handling code here:
        messageTextArea.enable();
    }//GEN-LAST:event_messageTextAreaMouseClicked

    public void showAddTripNotificationSms(Trip trip){
        this.show();
        Driver driver = trip.getBus().getDriver();
        Conductor conductor = trip.getBus().getConductor();
        String driverName = driver.getFirstName()+" "+driver.getLastName()+"(Driver)";
        String conductorName = conductor.getFirstName()+" "+conductor.getLastName()+"(Conductor)";
        driverContactNoTextField.setText(driver.getCellphoneNumber());
        conductorContactNoTextField.setText(conductor.getCellphoneNumber());
        driverNameTextLabel.setText(driverName);
        conductorNameTextLabel.setText(conductorName);
        messageTextArea.setText(template.getAddTripScheduleTemplate(trip));
    }
    
    public void showRemovedScheduleNotificationSms(Trip trip){
        this.show();
        Driver driver = trip.getBus().getDriver();
        Conductor conductor = trip.getBus().getConductor();
        String driverName = driver.getFirstName()+" "+driver.getLastName()+"(Driver)";
        String conductorName = conductor.getFirstName()+" "+conductor.getLastName()+"(Conductor)";
        driverContactNoTextField.setText(driver.getCellphoneNumber());
        conductorContactNoTextField.setText(conductor.getCellphoneNumber());
        driverNameTextLabel.setText(driverName);
        conductorNameTextLabel.setText(conductorName);
        messageTextArea.setText(template.getRemovedScheduleTemplate(trip));
    }
    
    public void showCanceledTripNotificationSms(Trip trip){
        this.show();
        Driver driver = trip.getBus().getDriver();
        Conductor conductor = trip.getBus().getConductor();
        String driverName = driver.getFirstName()+" "+driver.getLastName()+"(Driver)";
        String conductorName = conductor.getFirstName()+" "+conductor.getLastName()+"(Conductor)";
        driverContactNoTextField.setText(driver.getCellphoneNumber());
        conductorContactNoTextField.setText(conductor.getCellphoneNumber());
        driverNameTextLabel.setText(driverName);
        conductorNameTextLabel.setText(conductorName);
        messageTextArea.setText(template.getCancelledTripTemplate(trip));
    }
    
    public void showDelayedTripNotificationSms(Trip trip){
        this.show();
        Driver driver = trip.getBus().getDriver();
        Conductor conductor = trip.getBus().getConductor();
        String driverName = driver.getFirstName()+" "+driver.getLastName()+"(Driver)";
        String conductorName = conductor.getFirstName()+" "+conductor.getLastName()+"(Conductor)";
        driverContactNoTextField.setText(driver.getCellphoneNumber());
        conductorContactNoTextField.setText(conductor.getCellphoneNumber());
        driverNameTextLabel.setText(driverName);
        conductorNameTextLabel.setText(conductorName);
        messageTextArea.setText(template.getDelayedScheduleTemplate());
    }
    
    public void showFixedScheduleNotificationSms(Trip trip, Bus bus, String startMonth, String lastMonth){
        this.show();
        Driver driver = trip.getBus().getDriver();
        Conductor conductor = trip.getBus().getConductor();
        String driverName = driver.getFirstName()+" "+driver.getLastName()+"(Driver)";
        String conductorName = conductor.getFirstName()+" "+conductor.getLastName()+"(Conductor)";
        driverContactNoTextField.setText(driver.getCellphoneNumber());
        conductorContactNoTextField.setText(conductor.getCellphoneNumber());
        driverNameTextLabel.setText(driverName);
        conductorNameTextLabel.setText(conductorName);
        messageTextArea.setText(template.getSetFixedScheduleTemplate(trip, bus, startMonth, lastMonth));
    }
    
    public void showChangedInTripScheduleNotificationSms1(Trip oldTrip, Trip newTrip){
        this.show();
        Driver driver = oldTrip.getBus().getDriver();
        Conductor conductor = oldTrip.getBus().getConductor();
        String driverName = driver.getFirstName()+" "+driver.getLastName()+"(Driver)";
        String conductorName = conductor.getFirstName()+" "+conductor.getLastName()+"(Conductor)";
        driverContactNoTextField.setText(driver.getCellphoneNumber());
        conductorContactNoTextField.setText(conductor.getCellphoneNumber());
        driverNameTextLabel.setText(driverName);
        conductorNameTextLabel.setText(conductorName);
        messageTextArea.setText(template.getChangeInTripInfoTemplate(oldTrip, newTrip));
    }
    
    public void showChangedInTripScheduleNotificationSms2(Trip oldTrip, Trip newTrip){
        this.show();
        Driver driver = newTrip.getBus().getDriver();
        Conductor conductor = newTrip.getBus().getConductor();
        String driverName = driver.getFirstName()+" "+driver.getLastName()+"(Driver)";
        String conductorName = conductor.getFirstName()+" "+conductor.getLastName()+"(Conductor)";
        driverContactNoTextField.setText(driver.getCellphoneNumber());
        conductorContactNoTextField.setText(conductor.getCellphoneNumber());
        driverNameTextLabel.setText(driverName);
        conductorNameTextLabel.setText(conductorName);
        messageTextArea.setText(template.getChangeInTripInfoTemplate(oldTrip, newTrip));
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SmsChangeInScheduleFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SmsChangeInScheduleFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SmsChangeInScheduleFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SmsChangeInScheduleFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SmsChangeInScheduleFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton;
    private javax.swing.JTextField conductorContactNoTextField;
    private javax.swing.JLabel conductorNameTextLabel;
    private javax.swing.JTextField driverContactNoTextField;
    private javax.swing.JLabel driverNameTextLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea messageTextArea;
    private javax.swing.JLabel notificationTypeTextLabel;
    private javax.swing.JButton sendButton;
    // End of variables declaration//GEN-END:variables
}
